// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.prode5digos.domain;

import com.prode5digos.domain.Fecha;
import com.prode5digos.domain.Torneo;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Fecha_Roo_Finder {
    
    public static Long Fecha.countFindFechasByTorneo(Torneo torneo) {
        if (torneo == null) throw new IllegalArgumentException("The torneo argument is required");
        EntityManager em = Fecha.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Fecha AS o WHERE o.torneo = :torneo", Long.class);
        q.setParameter("torneo", torneo);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Fecha> Fecha.findFechasByTorneo(Torneo torneo) {
        if (torneo == null) throw new IllegalArgumentException("The torneo argument is required");
        EntityManager em = Fecha.entityManager();
        TypedQuery<Fecha> q = em.createQuery("SELECT o FROM Fecha AS o WHERE o.torneo = :torneo", Fecha.class);
        q.setParameter("torneo", torneo);
        return q;
    }
    
    public static TypedQuery<Fecha> Fecha.findFechasByTorneo(Torneo torneo, String sortFieldName, String sortOrder) {
        if (torneo == null) throw new IllegalArgumentException("The torneo argument is required");
        EntityManager em = Fecha.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Fecha AS o WHERE o.torneo = :torneo");
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            queryBuilder.append(" ORDER BY ").append(sortFieldName);
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                queryBuilder.append(" ").append(sortOrder);
            }
        }
        TypedQuery<Fecha> q = em.createQuery(queryBuilder.toString(), Fecha.class);
        q.setParameter("torneo", torneo);
        return q;
    }
    
}
